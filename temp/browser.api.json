{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.16.1",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "@monitoring/browser!",
  "docComment": "",
  "name": "@monitoring/browser",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@monitoring/browser!",
      "name": "",
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@monitoring/browser!addReplaceHandler:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addReplaceHandler(handler: "
            },
            {
              "kind": "Reference",
              "text": "ReplaceHandler",
              "canonicalReference": "@monitoring/browser!ReplaceHandler:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "handler",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "addReplaceHandler"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@monitoring/browser!HandleEvents:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "HandleEvents: "
            },
            {
              "kind": "Content",
              "text": "{\n    handleHttp: (data: "
            },
            {
              "kind": "Reference",
              "text": "MITOHttp",
              "canonicalReference": "@monitoring/browser!MITOHttp:interface"
            },
            {
              "kind": "Content",
              "text": ", type: "
            },
            {
              "kind": "Reference",
              "text": "BREADCRUMBTYPES",
              "canonicalReference": "@monitoring/browser!BREADCRUMBTYPES:enum"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    handleError: (errorEvent: "
            },
            {
              "kind": "Reference",
              "text": "ErrorEvent",
              "canonicalReference": "!ErrorEvent:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    handleNotErrorInstance: (message: string, filename: string, lineno: number, colno: number) => {\n        url: string;\n        name: string;\n        message: string;\n        level: "
            },
            {
              "kind": "Reference",
              "text": "Severity",
              "canonicalReference": "@monitoring/browser!Severity:enum"
            },
            {
              "kind": "Content",
              "text": ";\n        time: number;\n        stack: {\n            url: string;\n            func: "
            },
            {
              "kind": "Reference",
              "text": "ERRORTYPES",
              "canonicalReference": "@monitoring/browser!ERRORTYPES:enum"
            },
            {
              "kind": "Content",
              "text": ";\n            args: "
            },
            {
              "kind": "Reference",
              "text": "ERRORTYPES",
              "canonicalReference": "@monitoring/browser!ERRORTYPES:enum"
            },
            {
              "kind": "Content",
              "text": ";\n            line: number;\n            col: number;\n        }[];\n    };\n    handleHistory(data: "
            },
            {
              "kind": "Reference",
              "text": "Replace.IRouter",
              "canonicalReference": "@monitoring/browser!Replace.IRouter:interface"
            },
            {
              "kind": "Content",
              "text": "): void;\n    handleHashchange(data: "
            },
            {
              "kind": "Reference",
              "text": "HashChangeEvent",
              "canonicalReference": "!HashChangeEvent:interface"
            },
            {
              "kind": "Content",
              "text": "): void;\n    handleUnhandleRejection(ev: "
            },
            {
              "kind": "Reference",
              "text": "PromiseRejectionEvent",
              "canonicalReference": "!PromiseRejectionEvent:interface"
            },
            {
              "kind": "Content",
              "text": "): void;\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "HandleEvents",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 20
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@monitoring/browser!init:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function init(options?: "
            },
            {
              "kind": "Reference",
              "text": "InitOptions",
              "canonicalReference": "@monitoring/browser!InitOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "init"
        },
        {
          "kind": "Function",
          "canonicalReference": "@monitoring/browser!setupReplace:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setupReplace(): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "setupReplace"
        }
      ]
    }
  ]
}
